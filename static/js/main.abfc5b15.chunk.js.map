{"version":3,"sources":["images/placeholder_restaurant.png","images/pizza-logo.png","components/PlaceView.js","components/SavedPlaceItem.js","components/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","noop","PlaceView","props","_props$venueDetails","venueDetails","name","photoURL","category","tip","priceTier","distance","getNextPlace","gettingNextPlace","handleLunchClick","react_default","a","createElement","es","className","fluid","centered","style","height","alt","objectFit","width","src","RestaurantPlaceholder","Content","Header","Meta","Object","toConsumableArray","Array","map","e","i","key","fitted","Description","extra","columns","Column","target","onClick","primary","color","disabled","defaultProps","SavedPlaceItem","_ref","Image","size","verticalAlign","as","CLIENT_ID","CLIENT_SECRET","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleLocationSuccess","position","loadPlaces","ll","coords","latitude","longitude","handleLocationFailure","fetch","then","response","ok","json","Error","location","loc","catch","console","log","alert","state","venueResults","savedPlaces","currentVenueDetails","undefined","currentVenue","sidebarVisibility","bind","assertThisInitialized","loadPlaceDetails","toggleSidebar","_this2","navigator","geolocation","getCurrentPosition","venues","parameters","_this3","url","concat","constructVenueSearchURL","statusText","Promise","resolve","reject","length","setState","reason","nextVenue","venueId","_this4","id","coordinates","venue","bestPhoto","prefix","suffix","categories","price","tier","tips","groups","items","text","substring","Math","ceil","lat","lng","_this$state$currentVe","window","open","Pushable","Card","animation","visible","textAlign","Group","divided","place","components_SavedPlaceItem","Pusher","PizzaLogo","computer","tablet","mobile","components_PlaceView","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","components_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qUCMlCC,UAAO,cAEPC,EAAY,SAACC,GAAU,IAAAC,EAEoCD,EAAME,aAA5DC,EAFkBF,EAElBE,KAAMC,EAFYH,EAEZG,SAAUC,EAFEJ,EAEFI,SAAUC,EAFRL,EAEQK,IAAKC,EAFbN,EAEaM,UAAWC,EAFxBP,EAEwBO,SAC9CC,EAAoDT,EAApDS,aAAcC,EAAsCV,EAAtCU,iBAAkBC,EAAoBX,EAApBW,iBAEnC,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,aAAaC,OAAK,EAACC,UAAQ,GACzCN,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAACC,OAAO,UAClBR,EAAAC,EAAAC,cAAA,OAAKO,IAAI,aAAaF,MAAO,CAACG,UAAW,QAASC,MAAM,OAAQH,OAAO,QACrEI,IAAKpB,GAAYqB,OAErBb,EAAAC,EAAAC,cAACC,EAAA,EAAKW,QAAN,KACEd,EAAAC,EAAAC,cAACC,EAAA,EAAKY,OAAN,CAAaX,UAAU,gBACpBb,GAEHS,EAAAC,EAAAC,cAACC,EAAA,EAAKa,KAAN,CAAWZ,UAAU,eACnBJ,EAAAC,EAAAC,cAAA,YACGe,OAAAC,EAAA,EAAAD,CAAIE,MAAMxB,IAAYyB,IAAI,SAACC,EAAGC,GAAJ,OAAUtB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoB,IAAKD,EAAG/B,KAAK,SAASiC,QAAM,QAG3ExB,EAAAC,EAAAC,cAACC,EAAA,EAAKa,KAAN,CAAWZ,UAAU,kBACnBJ,EAAAC,EAAAC,cAAA,YACGT,IAGLO,EAAAC,EAAAC,cAACC,EAAA,EAAKa,KAAN,CAAWZ,UAAU,kBACnBJ,EAAAC,EAAAC,cAAA,YACGN,EAAW,QAGhBI,EAAAC,EAAAC,cAACC,EAAA,EAAKsB,YAAN,CAAkBrB,UAAU,qBACzBV,IAILM,EAAAC,EAAAC,cAACC,EAAA,EAAKW,QAAN,CAAcY,OAAK,GACjB1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwB,QAAS,GACb3B,EAAAC,EAAAC,cAACC,EAAA,EAAKyB,OAAN,KACE5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQE,OAAK,EAACwB,OAAO,SAASC,QAAS/B,EAAkBgC,SAAO,GAC9D/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMZ,KAAK,WADb,WAKFS,EAAAC,EAAAC,cAACC,EAAA,EAAKyB,OAAN,KACE5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQE,OAAK,EAAC2B,MAAM,MAAMF,QAASjC,EAAcoC,SAAUnC,GACzDE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMZ,KAAK,WADb,cA2BhBJ,EAAU+C,aAAe,CACvBpC,iBAAkB,QAClBD,aAAcX,EACda,iBAAkBb,GAGLC,0BClEAgD,EAhBQ,SAAAC,GAAsB,IAApB7C,EAAoB6C,EAApB7C,KAAMC,EAAc4C,EAAd5C,SAC7B,OACEQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAKkC,MAAN,CAAYC,KAAK,OAAO1B,IAAKpB,IAC7BQ,EAAAC,EAAAC,cAACC,EAAA,EAAKW,QAAN,CAAcyB,cAAc,UAC1BvC,EAAAC,EAAAC,cAACC,EAAA,EAAKY,OAAN,CAAayB,GAAG,KAAKjD,MCFvBkD,UAAY,oDAChBC,EAAgB,mDAuOHC,cAjNb,SAAAA,EAAYvD,GAAM,IAAAwD,EAAA,OAAA3B,OAAA4B,EAAA,EAAA5B,CAAA6B,KAAAH,IAChBC,EAAA3B,OAAA8B,EAAA,EAAA9B,CAAA6B,KAAA7B,OAAA+B,EAAA,EAAA/B,CAAA0B,GAAAM,KAAAH,KAAM1D,KAiCR8D,sBAAwB,SAACC,GACvBP,EAAKQ,WAAW,CAACC,GAAIF,EAASG,OAAOC,SAAW,IAAMJ,EAASG,OAAOE,aAnCtDZ,EAuClBa,sBAAwB,WACtBC,MAAM,8CACLC,KAAK,SAACC,GACL,GAAKA,EAASC,GAGZ,OAAOD,EAASE,OAFhB,MAAMC,MAAM,8BAIfJ,KAAK,SAACK,GAAD,OAAcpB,EAAKQ,WAAW,CAACC,GAAIW,EAASC,QACjDC,MAAMC,QAAQC,KACfC,MAAM,wDA9CNzB,EAAK0B,MAAQ,CACXC,aAAc,GACdC,YAAY,GACZC,yBAAqBC,EACrBC,aAAc,EACd7E,kBAAkB,EAClB8E,mBAAmB,GAGrBhC,EAAKQ,WAAaR,EAAKQ,WAAWyB,KAAhB5D,OAAA6D,EAAA,EAAA7D,QAAA6D,EAAA,EAAA7D,CAAA2B,KAClBA,EAAK/C,aAAe+C,EAAK/C,aAAagF,KAAlB5D,OAAA6D,EAAA,EAAA7D,QAAA6D,EAAA,EAAA7D,CAAA2B,KACpBA,EAAKmC,iBAAmBnC,EAAKmC,iBAAiBF,KAAtB5D,OAAA6D,EAAA,EAAA7D,QAAA6D,EAAA,EAAA7D,CAAA2B,KACxBA,EAAKa,sBAAwBb,EAAKa,sBAAsBoB,KAA3B5D,OAAA6D,EAAA,EAAA7D,QAAA6D,EAAA,EAAA7D,CAAA2B,KAC7BA,EAAKM,sBAAwBN,EAAKM,sBAAsB2B,KAA3B5D,OAAA6D,EAAA,EAAA7D,QAAA6D,EAAA,EAAA7D,CAAA2B,KAC7BA,EAAK7C,iBAAmB6C,EAAK7C,iBAAiB8E,KAAtB5D,OAAA6D,EAAA,EAAA7D,QAAA6D,EAAA,EAAA7D,CAAA2B,KACxBA,EAAKoC,cAAgBpC,EAAKoC,cAAcH,KAAnB5D,OAAA6D,EAAA,EAAA7D,QAAA6D,EAAA,EAAA7D,CAAA2B,KAlBLA,oFAqBE,IAAAqC,EAAAnC,KACboC,UAAUC,YAGbD,UAAUC,YAAYC,mBAAmBtC,KAAKI,sBAAuBJ,KAAKW,uBAF1EU,QAAQC,IAAI,6BAKdtB,KAAKM,WAAW,CAACC,GA7CD,qBA8CfM,KAAK,SAAC0B,GAAD,OAAYJ,EAAKF,iBAAiB,KACvCb,MAAMC,QAAQC,wCAsBNkB,GAAW,IAAAC,EAAAzC,KACpB,OAAOY,MAjEiB,SAAC4B,GAC3B,IAAIE,EAAM,kGAAAC,OACgChD,EADhC,mBAAAgD,OAC2D/C,GAD3D,eAAA+C,OAVG,yJAab,IAAK,IAAIlE,KAAO+D,EACdE,GAAG,IAAAC,OAAQlE,EAAR,KAAAkE,OAAeH,EAAW/D,IAE/B,OAAOiE,EA0DQE,CAAwBJ,IACpC3B,KAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAME,MAAMH,EAAS+B,YACvB,OAAO/B,EAASE,SAEjBH,KAAK,SAAAC,GACJ,OAAO,IAAIgC,QAAQ,SAACC,EAASC,GAC3B,IAAIT,EAASzB,EAASA,SAASyB,YAChBX,IAAXW,GAAwBA,EAAOU,OAAS,EAC1CD,EAAO,6CAEPP,EAAKS,SAAS,CACZzB,aAAcc,IAEhBQ,EAAQR,QAIbnB,MAAM,SAAC+B,GACN5B,MAAM,wBAA0B4B,8CAKnBC,GAAU,IA7FKC,EA6FLC,EAAAtD,KACzBA,KAAKkD,SAAS,CAAClG,kBAAkB,IACjC4D,OA/F8ByC,EA+FCrD,KAAKwB,MAAMC,aAAa2B,GAAWG,GA/FxB,2CAAAZ,OACzCU,EADyC,eAAAV,OACpBhD,EADoB,mBAAAgD,OACO/C,EADP,iBAgGzCiB,KAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAMC,MAAMH,EAAS+B,cAGxBhC,KAAK,SAAAC,GACJ,IAGIpE,EAAUC,EAAUE,EAAWD,EAAKE,EAAU0G,EAH5CC,EAAQ3C,EAASA,SAAS2C,MAC9BhH,EAAOgH,EAAMhH,KAKf,IAAKC,EAAW+G,EAAMC,UAAUC,OAJlB,YAIuCF,EAAMC,UAAUE,OACrE,MAAMrF,GAAG7B,OAAWkF,EAEpB,IAAKjF,EAAW8G,EAAMI,WAAW,GAAGpH,KACpC,MAAM8B,GAAG5B,OAAWiF,EAEpB,IAAK/E,EAAY4G,EAAMK,MAAMC,KAC7B,MAAMxF,GAAG1B,EAAY,EAErB,KACED,EAAM6G,EAAMO,KAAKC,OAAO,GAAGC,MAAM,GAAGC,MAC5BlB,OAAS,MACfrG,EAAMA,EAAIwH,UAAU,EAAG,KAAO,OAElC,MAAM7F,GAAG3B,EAAM,GAEf,IAAKE,EAAWuH,KAAKC,KAA4D,UAAvDhB,EAAK9B,MAAMC,aAAa2B,GAAWlC,SAASpE,UACtE,MAAMyB,GAAGzB,EAAW,GAEpB,IAAK0G,EAAW,GAAAb,OAAMc,EAAMvC,SAASqD,IAArB,KAAA5B,OAA4Bc,EAAMvC,SAASsD,KAC3D,MAAMjG,GAAGiF,EAAc,GAEvBF,EAAKJ,SAAS,CACZlG,kBAAkB,EAClB6E,aAAcuB,EACdzB,oBAAqB,CACnBlF,OACAC,WACAC,WACAE,YACAD,MACAE,WACA0G,mBAILpC,MAAM,SAAC+B,GACN5B,MAAM,wCAA0C4B,GAChDG,EAAKJ,SAAS,CAAClG,kBAAkB,6CAMnC,IAAMoG,GAAapD,KAAKwB,MAAMK,aAAe,GAAK7B,KAAKwB,MAAMC,aAAawB,OAC1EjD,KAAKiC,iBAAiBmB,8CAGN,IAAAqB,EACazE,KAAKwB,MAAMG,oBAAjC4B,EADSkB,EACTlB,GAAI9G,EADKgI,EACLhI,KAAMC,EADD+H,EACC/H,SACjBsD,KAAKkD,SAAS,CACZxB,YAAW,GAAAiB,OAAAxE,OAAAC,EAAA,EAAAD,CAAM6B,KAAKwB,MAAME,aAAjB,CAA8B,CAAC6B,KAAI9G,OAAMC,gBAEtDgI,OAAOC,KAAK,sDACV3E,KAAKwB,MAAMG,oBAAoB6B,YAAa,kDAK9CxD,KAAKkD,SAAS,CACZpB,mBAAoB9B,KAAKwB,MAAMM,qDAMjC,OACM5E,EAAAC,EAAAC,cAACC,EAAA,EAAQuH,SAAT,CAAkBtH,UAAU,kBAC1BJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASqC,GAAImF,IAAMC,UAAU,UAAUjH,MAAM,OAAOkH,QAAS/E,KAAKwB,MAAMM,mBACtE5E,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uBAAuB0B,QAASgB,KAAKkC,eAChDhF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMZ,KAAK,SAAS+C,KAAK,MAAMN,MAAM,UAEvChC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ2H,UAAU,UAAlB,gBACA9H,EAAAC,EAAAC,cAACC,EAAA,EAAK4H,MAAN,CAAYC,SAAO,GAEflF,KAAKwB,MAAME,YAAYpD,IAAI,SAAC6G,GAAD,OACzBjI,EAAAC,EAAAC,cAACgI,EAAD,CAAgB3G,IAAK0G,EAAM5B,GAAI9G,KAAM0I,EAAM1I,KACzCC,SAAUyI,EAAMzI,eAM1BQ,EAAAC,EAAAC,cAACC,EAAA,EAAQgI,OAAT,KACEnI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAAA,OAAKU,IAAKwH,IAAWhI,UAAU,WAAWK,IAAI,SAC9CT,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,kBACAJ,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ6B,MAAM,OAAOF,QAASgB,KAAKkC,eAAnC,iBAEFhF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMG,UAAQ,GACZN,EAAAC,EAAAC,cAACC,EAAA,EAAKyB,OAAN,CAAayG,SAAU,EAAGC,OAAQ,EAAGC,OAAQ,IAC1CzF,KAAKwB,MAAMG,qBACVzE,EAAAC,EAAAC,cAACsI,EAAD,CAAWlJ,aAAgBwD,KAAKwB,MAAMG,oBACpC5E,aAAgBiD,KAAKjD,aACrBE,iBAAoB+C,KAAK/C,iBACzBD,iBAAoBgD,KAAKwB,MAAMxE,qBAKvCE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,kEAxMAuI,aClBZC,EAAcC,QACW,cAA7BnB,OAAOxD,SAAS4E,UAEe,UAA7BpB,OAAOxD,SAAS4E,UAEhBpB,OAAOxD,SAAS4E,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvB7D,UAAU8D,cACPC,SAASF,GACTpF,KAAK,SAAAuF,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9E,QACfY,UAAU8D,cAAcO,WAK1BpF,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBF,MAAM,SAAAsF,GACLrF,QAAQqF,MAAM,4CAA6CA,KC/DjEC,IAASC,OAAO1J,EAAAC,EAAAC,cAACyJ,EAAD,MAASC,SAASC,eAAe,SDalC,WACb,GAA6C,kBAAmB3E,UAAW,CAGzE,GADkB,IAAI4E,IAAIC,kBAAwBvC,OAAOxD,UAC3CgG,SAAWxC,OAAOxD,SAASgG,OAIvC,OAGFxC,OAAOyC,iBAAiB,OAAQ,WAC9B,IAAMlB,EAAK,GAAAtD,OAAMsE,kBAAN,sBAEPrB,EAwCV,SAAiCK,GAE/BrF,MAAMqF,GACHpF,KAAK,SAAAC,GAGkB,MAApBA,EAASsG,SACuD,IAAhEtG,EAASuG,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CnF,UAAU8D,cAAcsB,MAAM3G,KAAK,SAAAuF,GACjCA,EAAaqB,aAAa5G,KAAK,WAC7B6D,OAAOxD,SAASwG,aAKpB1B,EAAgBC,KAGnB7E,MAAM,WACLC,QAAQC,IACN,mEA5DAqG,CAAwB1B,GAGxBD,EAAgBC,MC/BxB2B","file":"static/js/main.abfc5b15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder_restaurant.86d14ad8.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza-logo.fd7bdaa5.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Card, Icon, Button, Grid} from 'semantic-ui-react';\nimport RestaurantPlaceholder from '../images/placeholder_restaurant.png';\nimport '../styles/PlaceView.css';\n\nconst noop = () => {};\n\nconst PlaceView = (props) => {\n\n    const {name, photoURL, category, tip, priceTier, distance} = props.venueDetails,\n      {getNextPlace, gettingNextPlace, handleLunchClick} = props;\n\n    return (\n      <div>\n        <Card className=\"place-card\" fluid centered>\n          <div style={{height:'20rem',}}>\n            <img alt=\"restaurant\" style={{objectFit: 'cover', width:'100%', height:'100%'}}\n              src={photoURL || RestaurantPlaceholder} />\n          </div>\n          <Card.Content>\n            <Card.Header className=\"place-header\">\n              {name}\n            </Card.Header>\n            <Card.Meta className=\"place-price\">\n              <span>\n                {[...Array(priceTier)].map((e, i) => <Icon key={i} name=\"dollar\" fitted />)}\n              </span>\n            </Card.Meta>\n            <Card.Meta className=\"place-category\">\n              <span>\n                {category}\n              </span>\n            </Card.Meta>\n            <Card.Meta className=\"place-distance\">\n              <span>\n                {distance + ' mi'}\n              </span>\n            </Card.Meta>\n            <Card.Description className=\"place-description\">\n              {tip}\n            </Card.Description>\n          </Card.Content>\n\n          <Card.Content extra>\n            <Grid columns={2}>\n              <Grid.Column>\n                <Button fluid target=\"_blank\" onClick={handleLunchClick} primary >\n                  <Icon name=\"rocket\" />\n                  Lunch!\n                </Button>\n              </Grid.Column>\n              <Grid.Column>\n                <Button fluid color=\"red\" onClick={getNextPlace} disabled={gettingNextPlace}>\n                  <Icon name=\"cancel\" />\n                  Pass\n                </Button>\n              </Grid.Column>\n            </Grid>\n          </Card.Content>\n        </Card>\n      </div>\n    );\n};\n\n\nPlaceView.propTypes = {\n  venueDetails: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    photoURL: PropTypes.string,\n    category: PropTypes.string,\n    tip: PropTypes.string,\n    priceTier: PropTypes.number,\n    distance: PropTypes.number,\n  }),\n  getNextPlace: PropTypes.func.isRequired,\n  gettingNextPlace: PropTypes.bool.isRequired,\n  handleLunchClick: PropTypes.func.isRequired,\n};\n\nPlaceView.defaultProps = {\n  gettingNextPlace: 'false',\n  getNextPlace: noop,\n  handleLunchClick: noop,\n};\n\nexport default PlaceView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Item} from 'semantic-ui-react';\n\nconst SavedPlaceItem = ({name, photoURL}) => {\n  return (\n    <Item>\n      <Item.Image size=\"tiny\" src={photoURL} />\n      <Item.Content verticalAlign=\"middle\">\n        <Item.Header as=\"a\">{name}</Item.Header>\n      </Item.Content>\n    </Item>\n  );\n};\n\nSavedPlaceItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  photoURL: PropTypes.string.isRequired,\n};\n\nexport default SavedPlaceItem;\n","import React, { Component } from 'react';\nimport { Sidebar, Card, Grid, Button, Item, Icon, Header } from 'semantic-ui-react';\nimport PlaceView from './PlaceView';\nimport PizzaLogo from '../images/pizza-logo.png';\nimport SavedPlaceItem from './SavedPlaceItem';\nimport '../styles/App.css';\n\nconst CLIENT_ID = 'E35KZVRUV5YSWYBDLNFZOCEBPCOQUH44SNEZKZEWTLYTVZOA',\n  CLIENT_SECRET = 'WRIM5U3CLKN4NUN0NPZVDWNRGOE4TUSD3IRO4YI5LULGEMSJ',\n  CATEGORYID = '4bf58dd8d48988d14e941735,' +\n    '4bf58dd8d48988d142941735,4bf58dd8d48988d1df931735,' +\n    '4bf58dd8d48988d110941735,4bf58dd8d48988d1c1941735,' +\n    '4bf58dd8d48988d10f941735',//lunch restaurant categories\n  DEFAULTLOCATION = '32.7767,-96.7970'; //DALLAS\n\nconst constructVenueDetailsURL = (venueId) => `https://api.foursquare.com/v2/venues/` +\n  `${venueId}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=20170801`,\n\n  constructVenueSearchURL = (parameters) =>{\n  let url = `https://api.foursquare.com/v2/venues/search?v=20170801&` +\n    `intent=browse&radius=10000&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}` +\n    `&categoryId=${CATEGORYID}`;\n  for (let key in parameters){\n    url += `&${key}=${parameters[key]}`;\n  }\n  return url;\n};\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      venueResults: [],\n      savedPlaces:[],\n      currentVenueDetails: undefined,\n      currentVenue: 0,\n      gettingNextPlace: false,\n      sidebarVisibility: false,\n    };\n\n    this.loadPlaces = this.loadPlaces.bind(this);\n    this.getNextPlace = this.getNextPlace.bind(this);\n    this.loadPlaceDetails = this.loadPlaceDetails.bind(this);\n    this.handleLocationFailure = this.handleLocationFailure.bind(this);\n    this.handleLocationSuccess = this.handleLocationSuccess.bind(this);\n    this.handleLunchClick = this.handleLunchClick.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n  }\n\n  componentWillMount(){\n    if (!navigator.geolocation)\n      console.log(\"geolocation not supported\");\n    else {\n      navigator.geolocation.getCurrentPosition(this.handleLocationSuccess, this.handleLocationFailure);\n    }\n    // While we figure out the true location asynchronously, initialize application with default location\n    this.loadPlaces({ll: DEFAULTLOCATION})\n    .then((venues) => this.loadPlaceDetails(0))\n    .catch(console.log);\n  }\n\n\n  handleLocationSuccess = (position) => {\n    this.loadPlaces({ll: position.coords.latitude + ',' + position.coords.longitude});\n  }\n\n  // upon failure, try and get rough location\n  handleLocationFailure = () => {\n    fetch(\"http://ipinfo.io/json?token=2a3097ff5d6dc8\")\n    .then((response) =>{\n      if (!response.ok)\n        throw Error(\"Couldn't get IP location\");\n      else\n        return response.json();\n    })\n    .then((location) => this.loadPlaces({ll: location.loc}))\n    .catch(console.log);\n    alert(\"Please allow location access. Using rough location.\");\n  }\n\n  loadPlaces(parameters){\n    return fetch(constructVenueSearchURL(parameters))\n    .then(response => {\n      if (!response.ok)\n        throw Error(response.statusText);\n      return response.json();\n    })\n    .then(response => {\n      return new Promise((resolve, reject) => {\n        let venues = response.response.venues;\n        if (venues === undefined || venues.length < 1)\n          reject(\"Could not find any places for that query\");\n        else{\n          this.setState({\n            venueResults: venues,\n          });\n          resolve(venues);\n        }\n      });\n    })\n    .catch((reason) => {\n      alert(\"Couldn't load places.\" + reason);\n    });\n  }\n\n\n  loadPlaceDetails(nextVenue){\n    this.setState({gettingNextPlace: true});\n    fetch(constructVenueDetailsURL(this.state.venueResults[nextVenue].id))\n    .then(response => {\n      if (response.ok)\n        return response.json();\n      else\n        throw Error(response.statusText);\n      }\n    )\n    .then(response => {\n      const venue = response.response.venue,\n        name = venue.name,\n        imageSize = 'height500';\n      let photoURL, category, priceTier, tip, distance, coordinates;\n\n      // Catch exception in case JSON does not contain required data\n      try {photoURL = venue.bestPhoto.prefix + imageSize + venue.bestPhoto.suffix;}\n      catch(e){photoURL = undefined;}\n\n      try {category = venue.categories[0].name;}\n      catch(e){category = undefined;}\n\n      try {priceTier = venue.price.tier;}\n      catch(e){priceTier = 0;}\n\n      try {\n        tip = venue.tips.groups[0].items[0].text;\n        if (tip.length > 145)\n          tip = tip.substring(0, 145) + '...';\n      }\n      catch(e){tip = '';}\n\n      try {distance = Math.ceil(this.state.venueResults[nextVenue].location.distance * 0.000621371);}\n      catch(e){distance = '';}\n\n      try {coordinates = `${venue.location.lat},${venue.location.lng}`;}\n      catch(e){coordinates = '';}\n\n      this.setState({\n        gettingNextPlace: false,\n        currentVenue: nextVenue,\n        currentVenueDetails: {\n          name,\n          photoURL,\n          category,\n          priceTier,\n          tip,\n          distance,\n          coordinates,\n        },\n      });\n    })\n    .catch((reason) => {\n      alert(\"Please check your network connection \" + reason);\n      this.setState({gettingNextPlace: false});\n    });\n\n  }\n\n  getNextPlace(){\n    const nextVenue = (this.state.currentVenue + 1) % this.state.venueResults.length;\n    this.loadPlaceDetails(nextVenue);\n  }\n\n  handleLunchClick(){\n    const {id, name, photoURL} = this.state.currentVenueDetails;\n    this.setState({\n      savedPlaces: [...this.state.savedPlaces, {id, name, photoURL}],\n    });\n    window.open('https://www.google.com/maps/dir/?api=1&destination=' +\n      this.state.currentVenueDetails.coordinates, '_blank'\n    );\n  }\n\n  toggleSidebar(){\n    this.setState({\n      sidebarVisibility: !this.state.sidebarVisibility,\n    });\n  }\n\n\n  render() {\n    return (\n          <Sidebar.Pushable className=\"places-sidebar\">\n            <Sidebar as={Card} animation=\"overlay\" width=\"wide\" visible={this.state.sidebarVisibility} >\n              <a className=\"sidebar-close-toggle\" onClick={this.toggleSidebar}>\n                <Icon name=\"cancel\" size=\"big\" color=\"grey\" />\n              </a>\n              <Header textAlign=\"center\">Saved Places</Header>\n              <Item.Group divided>\n                {\n                  this.state.savedPlaces.map((place) => (\n                    <SavedPlaceItem key={place.id} name={place.name}\n                      photoURL={place.photoURL} />\n                  ))\n                }\n              </Item.Group>\n            </Sidebar>\n\n            <Sidebar.Pusher>\n              <div className=\"App\">\n                <header className=\"App-header\">\n                  <img src={PizzaLogo} className=\"App-logo\" alt=\"logo\" />\n                  <h1 className=\"App-title\">Lunch Roulette</h1>\n                  <p>It's Tinder! But for restaurants</p>\n                  <Button color=\"grey\" onClick={this.toggleSidebar}>Saved Places</Button>\n                </header>\n                <Grid centered >\n                  <Grid.Column computer={6} tablet={8} mobile={15}>\n                    {this.state.currentVenueDetails &&\n                      <PlaceView venueDetails = {this.state.currentVenueDetails}\n                        getNextPlace = {this.getNextPlace}\n                        handleLunchClick = {this.handleLunchClick}\n                        gettingNextPlace = {this.state.gettingNextPlace}\n                      />\n                    }\n                  </Grid.Column>\n                </Grid>\n                <div className=\"footer\">\n                  <p>\n                    Oluwatobi Oremade - Powered by Foursquare.\n                  </p>\n                </div>\n              </div>\n            </Sidebar.Pusher>\n          </Sidebar.Pushable>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport '../node_modules/semantic-ui-css/semantic.min.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}